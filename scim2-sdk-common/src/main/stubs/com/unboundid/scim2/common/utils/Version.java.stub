/*
 * Copyright 2015-2020 Ping Identity Corporation
 */

package com.unboundid.scim2.common.utils;



import java.util.ArrayList;
import java.util.Collections;
import java.util.List;



/**
 * This class provides information about the current set of version definitions.
 */
public final class Version
{
  //
  // NOTE -- This file is dynamically generated.  Do not edit it.  If you need
  //         to add something to it, then add it to the
  //         Version.java.stub file below src/main/stubs directory.
  //



  /**
   * The official full product name for the @SHORT_NAME@ library.  For this
   * build, the value is "@PRODUCT_NAME@".
   */
  public static final String PRODUCT_NAME = "@PRODUCT_NAME@";



  /**
   * The short product name for the @SHORT_NAME@ library.  This will not have
   * any spaces. For this build, the value is "@SHORT_NAME@".
   */
  public static final String SHORT_NAME = "@SHORT_NAME@";



  /**
   * The version string for the @SHORT_NAME@ library.
   * For this build, the value is "@VERSION@".
   */
  public static final String VERSION = "@VERSION@";


  /**
   * The timestamp string for the @SHORT_NAME@ library compilation.
   * For this build, the value is "@BUILD_TIMESTAMP@".
   */
  public static final String BUILD_TIMESTAMP = "@BUILD_TIMESTAMP@";


  /**
   * The Subversion path associated with the build root directory from which
   * this build of the @SHORT_NAME@ was generated.  It may be an absolute local
   * filesystem path if the Subversion path isn't available at build time.
   * For this build, the value is "@GIT_PATH@".
   */
  public static final String REPOSITORY_PATH = "@GIT_PATH@";


  /**
   * The source revision number from which this build of the @SHORT_NAME@ was
   * generated.  It may be -1 if the Subversion revision isn't available at
   * build time.  For this build, the value is @GIT_REVISION@.
   */
  public static final String REVISION_NUMBER = "@GIT_REVISION@";


  /**
   * The full version string for the @SHORT_NAME@ library.  For this build,
   * the value is "@PRODUCT_NAME@ @VERSION@".
   */
  public static final String FULL_VERSION_STRING =
       PRODUCT_NAME + ' ' + VERSION;



  /**
   * The short version string for the @SHORT_NAME@ library.  This will not
   * have any spaces. For this build, the value is "@SHORT_NAME@-@VERSION@".
   */
  public static final String SHORT_VERSION_STRING =
       SHORT_NAME + '-' + VERSION;



  /**
   * Prevent this class from being instantiated.
   */
  private Version()
  {
    // No implementation is required.
  }



  /**
   * Prints version information from this class to standard output.
   *
   * @param  args  The command-line arguments provided to this program.
   */
  public static void main(final String... args)
  {
    for (final String line : getVersionLines())
    {
      System.out.println(line);
    }
  }



  /**
   * Retrieves a list of lines containing information about the @SHORT_NAME@
   * library version.
   *
   * @return  A list of lines containing information about the @SHORT_NAME@
   *          library version.
   */
  public static List<String> getVersionLines()
  {
    final ArrayList<String> versionLines = new ArrayList<String>(11);

    versionLines.add("Full Version String:   " + FULL_VERSION_STRING);
    versionLines.add("Short Version String:  " + SHORT_VERSION_STRING);
    versionLines.add("Product Name:          " + PRODUCT_NAME);
    versionLines.add("Short Name:            " + SHORT_NAME);
    versionLines.add("Version:               " + VERSION);
    versionLines.add("Timestamp:             " + BUILD_TIMESTAMP);
    versionLines.add("Repository Path:       " + REPOSITORY_PATH);
    versionLines.add("Revision Number:       " + REVISION_NUMBER);

    return Collections.unmodifiableList(versionLines);
  }
}
