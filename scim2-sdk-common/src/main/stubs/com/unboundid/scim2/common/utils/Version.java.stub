/*
 * Copyright 2015-2025 Ping Identity Corporation
 */

package com.unboundid.scim2.common.utils;


import com.unboundid.scim2.common.annotations.NotNull;
import com.unboundid.scim2.common.annotations.Nullable;

import java.util.List;


/**
 * This class provides information about the build version.
 */
public final class Version
{
  //
  // NOTE -- This file is dynamically generated.  Do not edit it.  If you need
  //         to add something to it, then add it to the
  //         Version.java.stub file below src/main/stubs directory.
  //



  /**
   * The official full product name for the @SHORT_NAME@ library.  For this
   * build, the value is "@PRODUCT_NAME@".
   */
  public static final String PRODUCT_NAME = "@PRODUCT_NAME@";


  /**
   * The short product name for the @SHORT_NAME@ library.  This will not
   * have any spaces. For this build, the value is "@SHORT_NAME@".
   */
  public static final String SHORT_NAME = "@SHORT_NAME@";


  /**
   * The version string for the @SHORT_NAME@ library.
   * For this build, the value is "@VERSION@".
   */
  public static final String VERSION = "@VERSION@";


  /**
   * The timestamp string for the @SHORT_NAME@ library compilation.
   * For this build, the value is "@BUILD_TIMESTAMP@".
   */
  public static final String BUILD_TIMESTAMP = "@BUILD_TIMESTAMP@";


  /**
   * The Git branch associated with the build root directory from which this
   * build of the @SHORT_NAME@ was generated.  For this build, the value is
   * "@GIT_PATH@".
   */
  public static final String REPOSITORY_PATH = "@GIT_PATH@";


  /**
   * The source revision number from which this build of the @SHORT_NAME@
   * was generated.  For this build, the value is
   * "@GIT_REVISION@".
   */
  public static final String REVISION_NUMBER =
      "@GIT_REVISION@";


  /**
   * The full version string for the @SHORT_NAME@ library.  For this build,
   * the value is "@PRODUCT_NAME@ @VERSION@".
   */
  public static final String FULL_VERSION_STRING = PRODUCT_NAME + ' ' + VERSION;


  /**
   * The short version string for the @SHORT_NAME@ library.  This will not
   * have any spaces. For this build, the value is
   * "@SHORT_NAME@-@VERSION@".
   */
  public static final String SHORT_VERSION_STRING = SHORT_NAME + '-' + VERSION;



  /**
   * Prevent this class from being instantiated.
   */
  private Version()
  {
    // No implementation is required.
  }



  /**
   * Prints version information from this class to standard output.
   *
   * @param args  The command-line arguments provided to this program.
   */
  public static void main(@Nullable final String... args)
  {
    getVersionLines().forEach(System.out::println);
  }



  /**
   * Retrieves a list of lines containing information about the @SHORT_NAME@
   * library version.
   *
   * @return  The list of product information lines.
   */
  @NotNull
  public static List<String> getVersionLines()
  {
    return List.of(
        "Full Version String:   " + FULL_VERSION_STRING,
        "Short Version String:  " + SHORT_VERSION_STRING,
        "Product Name:          " + PRODUCT_NAME,
        "Short Name:            " + SHORT_NAME,
        "Version:               " + VERSION,
        "Timestamp:             " + BUILD_TIMESTAMP,
        "Repository Path:       " + REPOSITORY_PATH,
        "Revision Number:       " + REVISION_NUMBER
    );
  }
}
